<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.xhome.xauth.core.dao.RoleDAO">
	
	<cache/>
	
	<insert id="addRole" parameterType="org.xhome.xauth.Role" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO xhome_xauth_role (name, tip, owner, modifier, created, modified, version, status)
		VALUES(#{name}, #{tip}, #{owner}, #{modifier}, #{created}, #{modified}, #{version}, #{status})
	</insert>
	
	<update id="updateRole" parameterType="org.xhome.xauth.Role">
		UPDATE xhome_xauth_role
		SET name = #{name}, tip = #{tip}, modifier = #{modifier}, 
			modified = #{modified}, version = version + 1, status = #{status}
		WHERE id = #{id}
	</update>
	
	<update id="lockRole" parameterType="org.xhome.xauth.Role">
		UPDATE xhome_xauth_role
		SET modifier = #{modifier}, modified = NOW(), version = version + 1, status = 5
		WHERE id = #{id}
	</update>
	
	<update id="unlockRole" parameterType="org.xhome.xauth.Role">
		UPDATE xhome_xauth_role
		SET modifier = #{modifier}, modified = NOW(), version = version + 1, status = 1
		WHERE id = #{id}
	</update>
	
	<update id="removeRole" parameterType="org.xhome.xauth.Role">
		UPDATE xhome_xauth_role
		SET modifier = #{modifier}, modified = NOW(), version = version + 1, status = 0
		WHERE id = #{id}
	</update>
	
	<delete id="deleteRole" parameterType="org.xhome.xauth.Role">
		DELETE FROM xhome_xauth_role WHERE id = #{id} AND status != 0
	</delete>
	
	<select id="isRoleExists" resultType="boolean" parameterType="org.xhome.xauth.Role">
		SELECT COUNT(*) FROM xhome_xauth_role WHERE name = #{name} AND status != 0
	</select>
	
	<select id="isRoleUpdateable" resultType="boolean" parameterType="org.xhome.xauth.Role">
		SELECT COUNT(*) FROM xhome_xauth_role WHERE id = #{id} AND status != 0 AND status != 4
	</select>
	
	<select id="isRoleLocked" resultType="boolean" parameterType="org.xhome.xauth.Role">
		SELECT COUNT(*) FROM xhome_xauth_role WHERE id = #{id} AND status != 0 AND status = 5
	</select>
	
	<select id="isRoleRemoveable" resultType="boolean" parameterType="org.xhome.xauth.Role">
		SELECT COUNT(*) FROM xhome_xauth_role WHERE id = #{id} AND status != 2 AND status != 4
	</select>
	
	<select id="isRoleDeleteable" resultType="boolean" parameterType="org.xhome.xauth.Role">
		SELECT COUNT(*) FROM xhome_xauth_role WHERE id = #{id} AND status != 3 AND status != 4
	</select>
	
	<select id="queryRoleById" resultType="org.xhome.xauth.Role" parameterType="long">
		SELECT * FROM xhome_xauth_role WHERE id = #{id} LIMIT 1
	</select>
	
	<select id="queryRoleByName" resultType="org.xhome.xauth.Role" parameterType="String">
		SELECT * FROM xhome_xauth_role WHERE name = #{name} AND status != 0 LIMIT 1
	</select>
	
	<sql id="restriction_roles">
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="parameters != null">
				<if test="parameters.name != null">
					AND name LIKE CONCAT('%',#{parameters.name},'%')
				</if>
				<if test="parameters.tip != null">
					AND tip = #{parameters.tip}
				</if>
				<if test="parameters.status != null">
					AND status = #{parameters.status}
				</if>
			</if>
			<if test="parameters == null or parameters.status == null">
				AND status != 0
			</if>
		</trim>
	</sql>
	
	<select id="queryRoles" resultType="org.xhome.xauth.Role" parameterType="org.xhome.common.query.QueryBase">
		SELECT * FROM xhome_xauth_role
		<include refid="restriction_roles"/>
		ORDER BY name
		<if test="_parameter != null">
			LIMIT #{firstRow}, #{maxRow}
		</if>
	</select>
	
	<select id="countRoles" resultType="long" parameterType="org.xhome.common.query.QueryBase">
		SELECT COUNT(*) FROM xhome_xauth_role
		<include refid="restriction_roles"/>
	</select>
	
</mapper>

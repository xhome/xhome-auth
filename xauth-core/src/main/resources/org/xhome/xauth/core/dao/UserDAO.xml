<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.xhome.xauth.core.dao.UserDAO">

	<cache/>

	<resultMap id="userResultMap" type="org.xhome.xauth.User">
		<id property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="nick" column="nick"/>
		<result property="password" column="password"/>
		<result property="method" column="method"/>
		<result property="email" column="email"/>
		<result property="owner" column="owner"/>
		<result property="modifier" column="modifier"/>
		<result property="created" column="created"/>
		<result property="modified" column="modified"/>
		<result property="version" column="version"/>
		<result property="status" column="status"/>
		<collection property="roles" ofType="org.xhome.xauth.Role" columnPrefix="role_">
			<id property="id" column="id"/>
			<result property="name" column="name"/>
			<result property="tip" column="tip"/>
			<result property="owner" column="owner"/>
			<result property="modifier" column="modifier"/>
			<result property="created" column="created"/>
			<result property="modified" column="modified"/>
			<result property="version" column="version"/>
			<result property="status" column="status"/>
		</collection>
	</resultMap>
	
	<insert id="addUser" parameterType="org.xhome.xauth.User" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO xhome_xauth_user (name, nick, password, method, email, owner, modifier, created, modified, version, status)
		VALUES(#{name}, #{nick}, #{password}, #{method}, #{email}, #{owner}, #{modifier}, #{created}, #{modified}, #{version}, #{status})
	</insert>
	
	<update id="updateUser" parameterType="org.xhome.xauth.User">
		UPDATE xhome_xauth_user
		SET name = #{name}, nick = #{nick}, password = #{password}, method = #{method},
			email = #{email}, modifier = #{modifier}, modified = #{modified},
			version = version + 1, status = #{status}
		WHERE id = #{id}
	</update>
	
	<update id="lockUser" parameterType="org.xhome.xauth.User">
		UPDATE xhome_xauth_user
		SET modifier = #{modifier}, modified = NOW(), version = version + 1, status = 5
		WHERE id = #{id}
	</update>
	
	<update id="unlockUser" parameterType="org.xhome.xauth.User">
		UPDATE xhome_xauth_user
		SET modifier = #{modifier}, modified = NOW(), version = version + 1, status = 1
		WHERE id = #{id}
	</update>
	
	<update id="removeUser" parameterType="org.xhome.xauth.User">
		UPDATE xhome_xauth_user
		SET modifier = #{modifier}, modified = NOW(), version = version + 1, status = 0
		WHERE id = #{id}
	</update>
	
	<delete id="deleteUser" parameterType="org.xhome.xauth.User">
		DELETE FROM xhome_xauth_user WHERE id = #{id} AND status != 0
	</delete>
	
	<select id="isUserExists" resultType="boolean" parameterType="org.xhome.xauth.User">
		SELECT COUNT(*) FROM xhome_xauth_user WHERE name = #{name} AND status != 0
	</select>
	
	<select id="isUserUpdateable" resultType="boolean" parameterType="org.xhome.xauth.User">
		SELECT COUNT(*) FROM xhome_xauth_user WHERE id = #{id} AND status != 0 AND status != 4
	</select>
	
	<select id="isUserLocked" resultType="boolean" parameterType="org.xhome.xauth.User">
		SELECT COUNT(*) FROM xhome_xauth_user WHERE id = #{id} AND status != 0 AND status = 5
	</select>
	
	<select id="isUserRemoveable" resultType="boolean" parameterType="org.xhome.xauth.User">
		SELECT COUNT(*) FROM xhome_xauth_user WHERE id = #{id} AND status != 2 AND status != 4
	</select>
	
	<select id="isUserDeleteable" resultType="boolean" parameterType="org.xhome.xauth.User">
		SELECT COUNT(*) FROM xhome_xauth_user WHERE id = #{id} AND status != 3 AND status != 4
	</select>
	
	<sql id="fromUser">
		FROM xhome_xauth_user AS u
		LEFT JOIN xhome_xauth_user_role AS ur ON ur.user = u.id AND ur.status != 0
		LEFT JOIN xhome_xauth_role AS r ON ur.role = r.id AND r.status != 0
	</sql>
	
	<sql id="queryUser">
		SELECT u.*, r.id AS role_id, r.name AS role_name, r.tip AS role_tip, r.owner AS role_owner,
			r.modifier AS role_modifier, r.created AS role_created, r.modified AS role_modified,
			r.version AS role_version, r.status AS role_status
		<include refid="fromUser"/>
	</sql>
	
	<select id="queryUserById" resultMap="userResultMap" parameterType="long">
		<include refid="queryUser"/>
		WHERE u.id = #{id}
	</select>
	
	<select id="queryUserByName" resultMap="userResultMap" parameterType="String">
		<include refid="queryUser"/>
		WHERE u.name = #{name} AND u.status != 0
	</select>
	
	<sql id="queryUserId">
		SELECT u.id
		<include refid="fromUser"/>
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="parameters != null">
				<if test="parameters.name != null">
					AND u.name LIKE CONCAT('%',#{parameters.name},'%')
				</if>
				<if test="parameters.nick != null">
					AND u.nick LIKE CONCAT('%',#{parameters.nick},'%')
				</if>
				<if test="parameters.method != null">
					AND u.method LIKE CONCAT('%',#{parameters.method},'%')
				</if>
				<if test="parameters.email != null">
					AND u.email LIKE CONCAT('%',#{parameters.email},'%')
				</if>
				<if test="parameters.status != null">
					AND u.status = #{parameters.status}
				</if>
				<if test="parameters.role_id != null">
					AND r.id = #{parameters.role_id}
				</if>
				<if test="parameters.role_name != null">
					AND r.name LIKE CONCAT('%',#{parameters.role_name},'%')
				</if>
				<if test="parameters.role_tip != null">
					AND r.tip = #{parameters.role_tip}
				</if>
			</if>
			<if test="parameters == null or parameters.status == null">
				AND u.status != 0
			</if>
		</trim>
		GROUP BY u.id
	</sql>
	
	<select id="queryUsers" resultMap="userResultMap" parameterType="org.xhome.db.query.QueryBase">
		<include refid="queryUser"/>
		WHERE u.id IN (
			<include refid="queryUserId"/>
		)
		ORDER BY name
		<if test="_parameter != null">
			LIMIT #{firstRow}, #{maxRow}
		</if>
	</select>
	
	<select id="countUsers" resultType="long" parameterType="org.xhome.db.query.QueryBase">
		SELECT COUNT(*) FROM (
			<include refid="queryUserId"/>
		) AS t
	</select>
	
	<insert id="addUserRole" parameterType="Map" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO xhome_xauth_user_role (user, role, owner, modifier, created, modified, version, status)
		VALUES(#{user.id}, #{role.id}, #{owner}, #{modifier}, #{created}, #{modified}, #{version}, #{status})
	</insert>
	
	<update id="lockUserRole" parameterType="Map">
		UPDATE xhome_xauth_user_role
		SET modifier = #{modifier}, modified = NOW(), version = version + 1, status = 5
		WHERE status != 0 AND user = #{user.id} AND role = #{role.id}
	</update>
	
	<update id="unlockUserRole" parameterType="Map">
		UPDATE xhome_xauth_user_role
		SET modifier = #{modifier}, modified = NOW(), version = version + 1, status = 1
		WHERE status != 0 AND user = #{user.id} AND role = #{role.id}
	</update>
	
	<update id="removeUserRole" parameterType="Map">
		UPDATE xhome_xauth_user_role
		SET modifier = #{modifier}, modified = NOW(), version = version + 1, status = 0
		WHERE status != 0 AND user = #{user.id} AND role = #{role.id}
	</update>
	
	<delete id="deleteUserRole" parameterType="Map">
		DELETE FROM xhome_xauth_user_role WHERE status != 0 AND user = #{user.id} AND role = #{role.id}
	</delete>
	
	<select id="hasUserRole" resultType="boolean" parameterType="Map">
		SELECT COUNT(*) FROM xhome_xauth_user_role WHERE status != 0 AND user = #{user.id} AND role = #{role.id}
	</select>
	
	<select id="isUserRoleUpdateable" resultType="boolean" parameterType="Map">
		SELECT COUNT(*) FROM xhome_xauth_user_role WHERE status != 0 AND user = #{user.id} AND role = #{role.id} AND status != 4
	</select>
	
	<select id="isUserRoleLocked" resultType="boolean" parameterType="Map">
		SELECT COUNT(*) FROM xhome_xauth_user_role WHERE status != 0 AND user = #{user.id} AND role = #{role.id} AND status = 5
	</select>
	
	<select id="isUserRoleRemoveable" resultType="boolean" parameterType="Map">
		SELECT COUNT(*) FROM xhome_xauth_user_role WHERE status != 0 AND user = #{user.id} AND role = #{role.id} AND status != 2 AND status != 4
	</select>
	
	<select id="isUserRoleDeleteable" resultType="boolean" parameterType="Map">
		SELECT COUNT(*) FROM xhome_xauth_user_role WHERE status != 0 AND user = #{user.id} AND role = #{role.id} AND status != 3 AND status != 4
	</select>
	
</mapper>